{"version":3,"sources":["webpack:///sw.js","webpack:///webpack/bootstrap 1fe87067036c981b0103","webpack:///(webpack)/buildin/global.js","webpack:///./~/babel-runtime/regenerator/index.js","webpack:///./~/regenerator-runtime/runtime-module.js","webpack:///./~/regenerator-runtime/runtime.js","webpack:///./src/sw.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","window","global","self","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","undefined","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","obj","arg","type","err","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","forEach","method","AsyncIterator","invoke","resolve","reject","record","result","hasOwn","Promise","__await","then","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","process","domain","bind","state","GenStateSuspendedStart","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","done","GenStateSuspendedYield","iterator","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","isNaN","length","Op","$Symbol","Symbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","__webpack_exports__","_asyncToGenerator","gen","apply","arguments","step","error","pureFetch","req","headers","Headers","append","Request","Array","from","entries","_ref","_ref2","_slicedToArray","val","reqClone","mode","url","fetch","networkOnly","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","isArray","saveNetworkResponseToCache","_ref3","a","_callee","cache","networkResponse","_context","ok","put","clone","_x","_x2","cacheFirst","_ref4","_callee2","cacheResponse","_context2","caches","match","_x3","staleWhileRevalidate","_ref5","_callee3","cacheName","fetchPromise","_context3","open","_x4","_x5","deleteOldCaches","_ref6","_callee4","cacheNames","whitelistCacheNames","_context4","getAppCacheName","getDataCacheName","all","filter","startsWith","includes","map","delete","fetchAppUrls","_ref7","_callee5","resp","assetManifest","dynamicAppUrls","staticAppUrls","_context5","json","k","endsWith","concat","cacheAppUrls","_ref8","_callee6","appUrls","cacheExists","cacheResponses","_context6","has","cacheDataUrls","_ref9","_callee7","dataUrls","_context7","addEventListener","waitUntil","requestUrl","URL","request","origin","location","pathname","respondWith","resourceUrl","search","replace","resourceRequest","data","action","clients","claim","skipWaiting"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAK,EAAA,SAAAK,GAA2C,MAAAA,IAG3CV,EAAAW,EAAA,SAAAR,EAAAS,EAAAC,GACAb,EAAAc,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAb,EAAAoB,EAAA,SAAAhB,GACA,GAAAS,GAAAT,KAAAiB,WACA,WAA2B,MAAAjB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAW,EAAAE,EAAA,IAAAA,GACAA,GAIAb,EAAAc,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAlB,KAAAe,EAAAC,IAGtDvB,EAAA0B,EAAA,GAGA1B,IAAA2B,EAAA,KDMM,SAAUvB,EAAQD,GEtExB,GAAAyB,EAGAA,GAAA,WACA,MAAAC,QAGA,KAEAD,KAAAE,SAAA,qBAAAC,MAAA,QACC,MAAAC,GAED,gBAAAC,UACAL,EAAAK,QAOA7B,EAAAD,QAAAyB,GF6EM,SAAUxB,EAAQD,EAASH,GGjGjCI,EAAAD,QAAAH,EAAA,IHwGM,SAAUI,EAAQD,EAASH,IIxGjC,SAAAkC,GAEA,GAAAN,GACA,gBAAAM,KACA,gBAAAD,eACA,gBAAAE,WAAAN,KAIAO,EAAAR,EAAAS,oBACAtB,OAAAuB,oBAAAV,GAAAW,QAAA,yBAGAC,EAAAJ,GAAAR,EAAAS,kBAOA,IAJAT,EAAAS,uBAAAI,GAEArC,EAAAD,QAAAH,EAAA,GAEAoC,EAEAR,EAAAS,mBAAAG,MAGA,WACAZ,GAAAS,mBACG,MAAAL,GACHJ,EAAAS,uBAAAI,MJ8G6BlC,KAAKJ,EAASH,EAAoB,KAIzD,SAAUI,EAAQD,EAASH,IK9IjC,SAAAkC,IAUA,SAAAA,GACA,YA2BA,SAAAQ,GAAAC,EAAAC,EAAAT,EAAAU,GAEA,GAAAC,GAAAF,KAAApB,oBAAAuB,GAAAH,EAAAG,EACAC,EAAAjC,OAAAkC,OAAAH,EAAAtB,WACA0B,EAAA,GAAAC,GAAAN,MAMA,OAFAG,GAAAI,QAAAC,EAAAV,EAAAR,EAAAe,GAEAF,EAcA,QAAAM,GAAAC,EAAAC,EAAAC,GACA,IACA,OAAcC,KAAA,SAAAD,IAAAF,EAAAhD,KAAAiD,EAAAC,IACT,MAAAE,GACL,OAAcD,KAAA,QAAAD,IAAAE,IAiBd,QAAAZ,MACA,QAAAa,MACA,QAAAC,MA4BA,QAAAC,GAAAtC,IACA,yBAAAuC,QAAA,SAAAC,GACAxC,EAAAwC,GAAA,SAAAP,GACA,MAAA5B,MAAAuB,QAAAY,EAAAP,MAoCA,QAAAQ,GAAAjB,GACA,QAAAkB,GAAAF,EAAAP,EAAAU,EAAAC,GACA,GAAAC,GAAAf,EAAAN,EAAAgB,GAAAhB,EAAAS,EACA,cAAAY,EAAAX,KAEO,CACP,GAAAY,GAAAD,EAAAZ,IACA/C,EAAA4D,EAAA5D,KACA,OAAAA,IACA,gBAAAA,IACA6D,EAAAhE,KAAAG,EAAA,WACA8D,QAAAL,QAAAzD,EAAA+D,SAAAC,KAAA,SAAAhE,GACAwD,EAAA,OAAAxD,EAAAyD,EAAAC,IACW,SAAAT,GACXO,EAAA,QAAAP,EAAAQ,EAAAC,KAIAI,QAAAL,QAAAzD,GAAAgE,KAAA,SAAAC,GAgBAL,EAAA5D,MAAAiE,EACAR,EAAAG,IACSF,GAhCTA,EAAAC,EAAAZ,KA0CA,QAAAmB,GAAAZ,EAAAP,GACA,QAAAoB,KACA,UAAAL,SAAA,SAAAL,EAAAC,GACAF,EAAAF,EAAAP,EAAAU,EAAAC,KAIA,MAAAU,GAaAA,IAAAJ,KACAG,EAGAA,GACAA,IA/BA,gBAAA3C,GAAA6C,SAAA7C,EAAA6C,QAAAC,SACAd,EAAAhC,EAAA6C,QAAAC,OAAAC,KAAAf,GAGA,IAAAY,EAgCAjD,MAAAuB,QAAAwB,EAwBA,QAAAvB,GAAAV,EAAAR,EAAAe,GACA,GAAAgC,GAAAC,CAEA,iBAAAnB,EAAAP,GACA,GAAAyB,IAAAE,EACA,SAAAC,OAAA,+BAGA,IAAAH,IAAAI,EAAA,CACA,aAAAtB,EACA,KAAAP,EAKA,OAAA8B,KAMA,IAHArC,EAAAc,SACAd,EAAAO,QAEA,CACA,GAAA+B,GAAAtC,EAAAsC,QACA,IAAAA,EAAA,CACA,GAAAC,GAAAC,EAAAF,EAAAtC,EACA,IAAAuC,EAAA,CACA,GAAAA,IAAAE,EAAA,QACA,OAAAF,IAIA,YAAAvC,EAAAc,OAGAd,EAAA0C,KAAA1C,EAAA2C,MAAA3C,EAAAO,QAES,cAAAP,EAAAc,OAAA,CACT,GAAAkB,IAAAC,EAEA,KADAD,GAAAI,EACApC,EAAAO,GAGAP,GAAA4C,kBAAA5C,EAAAO,SAES,WAAAP,EAAAc,QACTd,EAAA6C,OAAA,SAAA7C,EAAAO,IAGAyB,GAAAE,CAEA,IAAAf,GAAAf,EAAAX,EAAAR,EAAAe,EACA,eAAAmB,EAAAX,KAAA,CAOA,GAJAwB,EAAAhC,EAAA8C,KACAV,EACAW,EAEA5B,EAAAZ,MAAAkC,EACA,QAGA,QACAjF,MAAA2D,EAAAZ,IACAuC,KAAA9C,EAAA8C,MAGS,UAAA3B,EAAAX,OACTwB,EAAAI,EAGApC,EAAAc,OAAA,QACAd,EAAAO,IAAAY,EAAAZ,OAUA,QAAAiC,GAAAF,EAAAtC,GACA,GAAAc,GAAAwB,EAAAU,SAAAhD,EAAAc,OACA,IAAAA,IAAAvB,EAAA,CAKA,GAFAS,EAAAsC,SAAA,KAEA,UAAAtC,EAAAc,OAAA,CACA,GAAAwB,EAAAU,SAAAC,SAGAjD,EAAAc,OAAA,SACAd,EAAAO,IAAAhB,EACAiD,EAAAF,EAAAtC,GAEA,UAAAA,EAAAc,QAGA,MAAA2B,EAIAzC,GAAAc,OAAA,QACAd,EAAAO,IAAA,GAAA2C,WACA,kDAGA,MAAAT,GAGA,GAAAtB,GAAAf,EAAAU,EAAAwB,EAAAU,SAAAhD,EAAAO,IAEA,cAAAY,EAAAX,KAIA,MAHAR,GAAAc,OAAA,QACAd,EAAAO,IAAAY,EAAAZ,IACAP,EAAAsC,SAAA,KACAG,CAGA,IAAAU,GAAAhC,EAAAZ,GAEA,OAAA4C,GAOAA,EAAAL,MAGA9C,EAAAsC,EAAAc,YAAAD,EAAA3F,MAGAwC,EAAAqD,KAAAf,EAAAgB,QAQA,WAAAtD,EAAAc,SACAd,EAAAc,OAAA,OACAd,EAAAO,IAAAhB,GAUAS,EAAAsC,SAAA,KACAG,GANAU,GA3BAnD,EAAAc,OAAA,QACAd,EAAAO,IAAA,GAAA2C,WAAA,oCACAlD,EAAAsC,SAAA,KACAG,GAoDA,QAAAc,GAAAC,GACA,GAAAC,IAAiBC,OAAAF,EAAA,GAEjB,KAAAA,KACAC,EAAAE,SAAAH,EAAA,IAGA,IAAAA,KACAC,EAAAG,WAAAJ,EAAA,GACAC,EAAAI,SAAAL,EAAA,IAGA7E,KAAAmF,WAAAC,KAAAN,GAGA,QAAAO,GAAAP,GACA,GAAAtC,GAAAsC,EAAAQ,cACA9C,GAAAX,KAAA,eACAW,GAAAZ,IACAkD,EAAAQ,WAAA9C,EAGA,QAAAlB,GAAAN,GAIAhB,KAAAmF,aAAwBJ,OAAA,SACxB/D,EAAAkB,QAAA0C,EAAA5E,MACAA,KAAAuF,OAAA,GA8BA,QAAAC,GAAAC,GACA,GAAAA,EAAA,CACA,GAAAC,GAAAD,EAAAE,EACA,IAAAD,EACA,MAAAA,GAAAhH,KAAA+G,EAGA,sBAAAA,GAAAf,KACA,MAAAe,EAGA,KAAAG,MAAAH,EAAAI,QAAA,CACA,GAAArH,IAAA,EAAAkG,EAAA,QAAAA,KACA,OAAAlG,EAAAiH,EAAAI,QACA,GAAAnD,EAAAhE,KAAA+G,EAAAjH,GAGA,MAFAkG,GAAA7F,MAAA4G,EAAAjH,GACAkG,EAAAP,MAAA,EACAO,CAOA,OAHAA,GAAA7F,MAAA+B,EACA8D,EAAAP,MAAA,EAEAO,EAGA,OAAAA,WAKA,OAAYA,KAAAhB,GAIZ,QAAAA,KACA,OAAY7E,MAAA+B,EAAAuD,MAAA,GAjgBZ,GAEAvD,GAFAkF,EAAA5G,OAAAS,UACA+C,EAAAoD,EAAAlG,eAEAmG,EAAA,kBAAAC,kBACAL,EAAAI,EAAA1B,UAAA,aACA4B,EAAAF,EAAAG,eAAA,kBACAC,EAAAJ,EAAAK,aAAA,gBAEAC,EAAA,gBAAA9H,GACA+H,EAAAjG,EAAAG,kBACA,IAAA8F,EAQA,YAPAD,IAGA9H,EAAAD,QAAAgI,GASAA,GAAAjG,EAAAG,mBAAA6F,EAAA9H,EAAAD,WAcAgI,EAAAzF,MAoBA,IAAAyC,GAAA,iBACAc,EAAA,iBACAb,EAAA,YACAE,EAAA,YAIAK,KAYAyC,IACAA,GAAAZ,GAAA,WACA,MAAA3F,MAGA,IAAAwG,GAAAtH,OAAAuH,eACAC,EAAAF,OAAAhB,OACAkB,IACAA,IAAAZ,GACApD,EAAAhE,KAAAgI,EAAAf,KAGAY,EAAAG,EAGA,IAAAC,GAAA3E,EAAArC,UACAuB,EAAAvB,UAAAT,OAAAkC,OAAAmF,EACAxE,GAAApC,UAAAgH,EAAAC,YAAA5E,EACAA,EAAA4E,YAAA7E,EACAC,EAAAmE,GACApE,EAAA8E,YAAA,oBAYAP,EAAAQ,oBAAA,SAAAC,GACA,GAAAC,GAAA,kBAAAD,MAAAH,WACA,SAAAI,IACAA,IAAAjF,GAGA,uBAAAiF,EAAAH,aAAAG,EAAAjI,QAIAuH,EAAAW,KAAA,SAAAF,GAUA,MATA7H,QAAAgI,eACAhI,OAAAgI,eAAAH,EAAA/E,IAEA+E,EAAAI,UAAAnF,EACAmE,IAAAY,KACAA,EAAAZ,GAAA,sBAGAY,EAAApH,UAAAT,OAAAkC,OAAAuF,GACAI,GAOAT,EAAAc,MAAA,SAAAxF,GACA,OAAYgB,QAAAhB,IAkFZK,EAAAG,EAAAzC,WACAyC,EAAAzC,UAAAsG,GAAA,WACA,MAAAjG,OAEAsG,EAAAlE,gBAKAkE,EAAAe,MAAA,SAAAvG,EAAAC,EAAAT,EAAAU,GACA,GAAAsG,GAAA,GAAAlF,GACAvB,EAAAC,EAAAC,EAAAT,EAAAU,GAGA,OAAAsF,GAAAQ,oBAAA/F,GACAuG,EACAA,EAAA5C,OAAA7B,KAAA,SAAAJ,GACA,MAAAA,GAAA0B,KAAA1B,EAAA5D,MAAAyI,EAAA5C,UAsKAzC,EAAA0E,GAEAA,EAAAR,GAAA,YAOAQ,EAAAhB,GAAA,WACA,MAAA3F,OAGA2G,EAAAY,SAAA,WACA,4BAkCAjB,EAAAkB,KAAA,SAAA/H,GACA,GAAA+H,KACA,QAAAC,KAAAhI,GACA+H,EAAApC,KAAAqC,EAMA,OAJAD,GAAAE,UAIA,QAAAhD,KACA,KAAA8C,EAAA3B,QAAA,CACA,GAAA4B,GAAAD,EAAAG,KACA,IAAAF,IAAAhI,GAGA,MAFAiF,GAAA7F,MAAA4I,EACA/C,EAAAP,MAAA,EACAO,EAQA,MADAA,GAAAP,MAAA,EACAO,IAsCA4B,EAAAd,SAMAlE,EAAA3B,WACAiH,YAAAtF,EAEAiE,MAAA,SAAAqC,GAcA,GAbA5H,KAAA6H,KAAA,EACA7H,KAAA0E,KAAA,EAGA1E,KAAA+D,KAAA/D,KAAAgE,MAAApD,EACAZ,KAAAmE,MAAA,EACAnE,KAAA2D,SAAA,KAEA3D,KAAAmC,OAAA,OACAnC,KAAA4B,IAAAhB,EAEAZ,KAAAmF,WAAAjD,QAAAmD,IAEAuC,EACA,OAAA7I,KAAAiB,MAEA,MAAAjB,EAAA+I,OAAA,IACApF,EAAAhE,KAAAsB,KAAAjB,KACA6G,OAAA7G,EAAAgJ,MAAA,MACA/H,KAAAjB,GAAA6B,IAMAoH,KAAA,WACAhI,KAAAmE,MAAA,CAEA,IAAA8D,GAAAjI,KAAAmF,WAAA,GACA+C,EAAAD,EAAA3C,UACA,cAAA4C,EAAArG,KACA,KAAAqG,GAAAtG,GAGA,OAAA5B,MAAAmI,MAGAlE,kBAAA,SAAAmE,GAMA,QAAAC,GAAAC,EAAAC,GAYA,MAXA/F,GAAAX,KAAA,QACAW,EAAAZ,IAAAwG,EACA/G,EAAAqD,KAAA4D,EAEAC,IAGAlH,EAAAc,OAAA,OACAd,EAAAO,IAAAhB,KAGA2H,EAjBA,GAAAvI,KAAAmE,KACA,KAAAiE,EAmBA,QAhBA/G,GAAArB,KAgBAxB,EAAAwB,KAAAmF,WAAAU,OAAA,EAA8CrH,GAAA,IAAQA,EAAA,CACtD,GAAAsG,GAAA9E,KAAAmF,WAAA3G,GACAgE,EAAAsC,EAAAQ,UAEA,aAAAR,EAAAC,OAIA,MAAAsD,GAAA,MAGA,IAAAvD,EAAAC,QAAA/E,KAAA6H,KAAA,CACA,GAAAW,GAAA9F,EAAAhE,KAAAoG,EAAA,YACA2D,EAAA/F,EAAAhE,KAAAoG,EAAA,aAEA,IAAA0D,GAAAC,EAAA,CACA,GAAAzI,KAAA6H,KAAA/C,EAAAE,SACA,MAAAqD,GAAAvD,EAAAE,UAAA,EACa,IAAAhF,KAAA6H,KAAA/C,EAAAG,WACb,MAAAoD,GAAAvD,EAAAG,gBAGW,IAAAuD,GACX,GAAAxI,KAAA6H,KAAA/C,EAAAE,SACA,MAAAqD,GAAAvD,EAAAE,UAAA,OAGW,KAAAyD,EAMX,SAAAjF,OAAA,yCALA,IAAAxD,KAAA6H,KAAA/C,EAAAG,WACA,MAAAoD,GAAAvD,EAAAG,gBAUAf,OAAA,SAAArC,EAAAD,GACA,OAAApD,GAAAwB,KAAAmF,WAAAU,OAAA,EAA8CrH,GAAA,IAAQA,EAAA,CACtD,GAAAsG,GAAA9E,KAAAmF,WAAA3G,EACA,IAAAsG,EAAAC,QAAA/E,KAAA6H,MACAnF,EAAAhE,KAAAoG,EAAA,eACA9E,KAAA6H,KAAA/C,EAAAG,WAAA,CACA,GAAAyD,GAAA5D,CACA,QAIA4D,IACA,UAAA7G,GACA,aAAAA,IACA6G,EAAA3D,QAAAnD,GACAA,GAAA8G,EAAAzD,aAGAyD,EAAA,KAGA,IAAAlG,GAAAkG,IAAApD,aAIA,OAHA9C,GAAAX,OACAW,EAAAZ,MAEA8G,GACA1I,KAAAmC,OAAA,OACAnC,KAAA0E,KAAAgE,EAAAzD,WACAnB,GAGA9D,KAAA2I,SAAAnG,IAGAmG,SAAA,SAAAnG,EAAA0C,GACA,aAAA1C,EAAAX,KACA,KAAAW,GAAAZ,GAcA,OAXA,UAAAY,EAAAX,MACA,aAAAW,EAAAX,KACA7B,KAAA0E,KAAAlC,EAAAZ,IACO,WAAAY,EAAAX,MACP7B,KAAAmI,KAAAnI,KAAA4B,IAAAY,EAAAZ,IACA5B,KAAAmC,OAAA,SACAnC,KAAA0E,KAAA,OACO,WAAAlC,EAAAX,MAAAqD,IACPlF,KAAA0E,KAAAQ,GAGApB,GAGA8E,OAAA,SAAA3D,GACA,OAAAzG,GAAAwB,KAAAmF,WAAAU,OAAA,EAA8CrH,GAAA,IAAQA,EAAA,CACtD,GAAAsG,GAAA9E,KAAAmF,WAAA3G,EACA,IAAAsG,EAAAG,eAGA,MAFAjF,MAAA2I,SAAA7D,EAAAQ,WAAAR,EAAAI,UACAG,EAAAP,GACAhB,IAKA+E,MAAA,SAAA9D,GACA,OAAAvG,GAAAwB,KAAAmF,WAAAU,OAAA,EAA8CrH,GAAA,IAAQA,EAAA,CACtD,GAAAsG,GAAA9E,KAAAmF,WAAA3G,EACA,IAAAsG,EAAAC,WAAA,CACA,GAAAvC,GAAAsC,EAAAQ,UACA,cAAA9C,EAAAX,KAAA,CACA,GAAAiH,GAAAtG,EAAAZ,GACAyD,GAAAP,GAEA,MAAAgE,IAMA,SAAAtF,OAAA,0BAGAuF,cAAA,SAAAtD,EAAAhB,EAAAE,GAaA,MAZA3E,MAAA2D,UACAU,SAAAmB,EAAAC,GACAhB,aACAE,WAGA,SAAA3E,KAAAmC,SAGAnC,KAAA4B,IAAAhB,GAGAkD,KAOA,gBAAAzD,KACA,gBAAAD,eACA,gBAAAE,WAAAN,QLmJ6BtB,KAAKJ,EAASH,EAAoB,KAGxD,CAED,SAAUI,EAAQyK,EAAqB7K,GAE7C,YAwRA,SAAS8K,GAAkBvH,GAAM,MAAO,YAAc,GAAIwH,GAAMxH,EAAGyH,MAAMnJ,KAAMoJ,UAAY,OAAO,IAAIzG,SAAQ,SAAUL,EAASC,GAAU,QAAS8G,GAAK5B,EAAK7F,GAAO,IAAM,GAAI4C,GAAO0E,EAAIzB,GAAK7F,GAAU/C,EAAQ2F,EAAK3F,MAAS,MAAOyK,GAAwB,WAAf/G,GAAO+G,GAAkB,IAAI9E,EAAKL,KAAiC,MAAOxB,SAAQL,QAAQzD,GAAOgE,KAAK,SAAUhE,GAASwK,EAAK,OAAQxK,IAAW,SAAUiD,GAAOuH,EAAK,QAASvH,IAAtIQ,GAAQzD,GAA4I,MAAOwK,GAAK,WMhnCzb,QAASE,GAAUC,GACjB,GAAMC,GAAU,GAAIC,QAIpB,IAHAD,EAAQE,OAAO,gBAAiB,YAChCF,EAAQE,OAAO,SAAU,YAErBH,EAAI5C,cAAgBgD,QAAS,CAC/BC,MAAMC,KAAKN,EAAIC,QAAQM,WAAW7H,QAAQ,SAAA8H,GAAA,GAAAC,GAAAC,EAAAF,EAAA,GAAEvC,EAAFwC,EAAA,GAAOE,EAAPF,EAAA,SAAgBR,GAAQE,OAAOlC,EAAK0C,IAE9E,IAAIC,SAOJ,OALEA,GADe,aAAbZ,EAAIa,KACK,GAAIT,SAAQJ,EAAIc,KAAOb,YAEvB,GAAIG,SAAQJ,GAAOC,YAGzBc,MAAMH,GAGf,MAAOG,OAAMf,GAAOC,YAqBtB,QAASe,GAAYhB,GACnB,MAAOD,GAAUC,GNizBnBtK,OAAOC,eAAe6J,EAAqB,cAAgBnK,OAAO,GAC7C,IAAI4L,GAA0DtM,EAAoB,GAC9EuM,EAAkEvM,EAAoBoB,EAAEkL,GAG7GP,EAAiB,WAAc,QAASS,GAAcC,EAAKpM,GAAK,GAAIqM,MAAeC,GAAK,EAAUC,GAAK,EAAWC,MAAKpK,EAAW,KAAM,IAAK,GAAiCqK,GAA7BC,EAAKN,EAAI5E,OAAO3B,cAAmByG,GAAMG,EAAKC,EAAGxG,QAAQP,QAAoB0G,EAAKzF,KAAK6F,EAAGpM,QAAYL,GAAKqM,EAAKhF,SAAWrH,GAA3DsM,GAAK,IAAoE,MAAOhJ,GAAOiJ,GAAK,EAAMC,EAAKlJ,EAAO,QAAU,KAAWgJ,GAAMI,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIH,EAAI,KAAMC,IAAQ,MAAOH,GAAQ,MAAO,UAAUD,EAAKpM,GAAK,GAAIqL,MAAMsB,QAAQP,GAAQ,MAAOA,EAAY,IAAI5E,OAAO3B,WAAYnF,QAAO0L,GAAQ,MAAOD,GAAcC,EAAKpM,EAAa,MAAM,IAAI+F,WAAU,4DAEllB6G,EAA6B,WAC/B,GAAIC,GAAQpC,EAAkByB,EAAgEY,EAAErE,KM50BlG,QAAAsE,GAA0C/B,EAAKgC,GAA/C,GAAAC,EAAA,OAAAf,GAAAY,EAAAzK,KAAA,SAAA6K,GAAA,cAAAA,EAAA7D,KAAA6D,EAAAhH,MAAA,aAAAgH,GAAAhH,KAAA,EACgC6E,EAAUC,EAD1C,cACQiC,GADRC,EAAA3H,KAEM0H,EAAgBE,IAClBH,EAAMI,IAAIpC,EAAKiC,EAAgBI,SAHnCH,EAAAxH,OAAA,SAMSuH,EANT,wBAAAC,GAAA1D,SAAAuD,EAAAvL,QNs2BE,OAAO,UAAoC8L,EAAIC,GAC7C,MAAOV,GAAMlC,MAAMnJ,KAAMoJ,eAIzB4C,EAAa,WACf,GAAIC,GAAQhD,EAAkByB,EAAgEY,EAAErE,KMn2BlG,QAAAiF,GAA0B1C,GAA1B,GAAA2C,EAAA,OAAAzB,GAAAY,EAAAzK,KAAA,SAAAuL,GAAA,cAAAA,EAAAvE,KAAAuE,EAAA1H,MAAA,aAAA0H,GAAA1H,KAAA,EAC8B2H,OAAOC,MAAM9C,EAD3C,eAEwB5I,MADhBuL,EADRC,EAAArI,MAAA,CAAAqI,EAAA1H,KAAA,cAAA0H,GAAAlI,OAAA,SAGWqG,MAAMf,GAHjB,cAAA4C,GAAAlI,OAAA,SAMSiI,EANT,wBAAAC,GAAApE,SAAAkE,EAAAlM,QNi4BE,OAAO,UAAoBuM,GACzB,MAAON,GAAM9C,MAAMnJ,KAAMoJ,eAIzBoD,EAAuB,WACzB,GAAIC,GAAQxD,EAAkByB,EAAgEY,EAAErE,KM13BlG,QAAAyF,GAAoClD,EAAKmD,GAAzC,GAAAnB,GAAAW,EAAAS,CAAA,OAAAlC,GAAAY,EAAAzK,KAAA,SAAAgM,GAAA,cAAAA,EAAAhF,KAAAgF,EAAAnI,MAAA,aAAAmI,GAAAnI,KAAA,EACsB2H,OAAOS,KAAKH,EADlC,cACQnB,GADRqB,EAAA9I,KAAA8I,EAAAnI,KAAA,EAE8B8G,EAAMc,MAAM9C,EAF1C,WAEQ2C,EAFRU,EAAA9I,KAIQ6I,EAAexB,EAA2B5B,EAAKgC,OAE/B5K,KAAlBuL,EANN,CAAAU,EAAAnI,KAAA,cAAAmI,GAAA3I,OAAA,SAOW0I,EAPX,cAAAC,GAAA3I,OAAA,SAUSiI,EAVT,yBAAAU,GAAA7E,SAAA0E,EAAA1M,QN85BE,OAAO,UAA8B+M,EAAKC,GACxC,MAAOP,GAAMtD,MAAMnJ,KAAMoJ,eAIzB6D,EAAkB,WACpB,GAAIC,GAAQjE,EAAkByB,EAAgEY,EAAErE,KMv5BlG,QAAAkG,KAAA,GAAAC,GAAAC,CAAA,OAAA3C,GAAAY,EAAAzK,KAAA,SAAAyM,GAAA,cAAAA,EAAAzF,KAAAyF,EAAA5I,MAAA,aAAA4I,GAAA5I,KAAA,EAC2B2H,OAAO7E,MADlC,cACQ4F,GADRE,EAAAvJ,KAGQsJ,GACJE,IACAC,KALJF,EAAApJ,OAAA,SAQSvB,QAAQ8K,IACbL,EACGM,OAAO,SAAAf,GAAA,MAAaA,GAAUgB,WAAW,WACzCD,OAAO,SAAAf,GAAA,OAAeU,EAAoBO,SAASjB,KACnDkB,IAAI,SAAAlB,GAAA,MAAaN,QAAOyB,OAAOnB,MAZtC,wBAAAW,GAAAtF,SAAAmF,EAAAnN,QNm7BE,OAAO,YACL,MAAOkN,GAAM/D,MAAMnJ,KAAMoJ,eAIzB2E,EAAe,WACjB,GAAIC,GAAQ/E,EAAkByB,EAAgEY,EAAErE,KMz6BlG,QAAAgH,KAAA,GAAAC,GAAAC,EAAAC,EAAAC,CAAA,OAAA3D,GAAAY,EAAAzK,KAAA,SAAAyN,GAAA,cAAAA,EAAAzG,KAAAyG,EAAA5J,MAAA,aAAA4J,GAAA5J,KAAA,EACqB6E,EAAU,sCAD/B,cACQ2E,GADRI,EAAAvK,KAAAuK,EAAA5J,KAAA,EAE8BwJ,EAAKK,MAFnC,cAEQJ,GAFRG,EAAAvK,KAIQqK,EAAiBlP,OAAOsI,KAAK2G,GAChCT,OAAO,SAAAc,GAAA,OAAOA,EAAEC,SAAS,UACzBZ,IAAI,SAAAW,GAAA,MAAKL,GAAcK,KAEpBH,GACJ,mBAEA,8BACA,gCAEA,+CACA,kEAfJC,EAAApK,OAAA,SAkBSmK,EAAcK,OAAON,GAlB9B,wBAAAE,GAAAtG,SAAAiG,EAAAjO,QNy8BE,OAAO,YACL,MAAOgO,GAAM7E,MAAMnJ,KAAMoJ,eAIzBuF,EAAe,WACjB,GAAIC,GAAQ3F,EAAkByB,EAAgEY,EAAErE,KM17BlG,QAAA4H,KAAA,GAAAC,GAAAnC,EAAAoC,EAAAvD,EAAAwD,CAAA,OAAAtE,GAAAY,EAAAzK,KAAA,SAAAoO,GAAA,cAAAA,EAAApH,KAAAoH,EAAAvK,MAAA,aAAAuK,GAAAvK,KAAA,EACwBqJ,GADxB,cACQe,GADRG,EAAAlL,KAGQ4I,EAAYY,IAHpB0B,EAAAvK,KAAA,EAK4B2H,OAAO6C,IAAIvC,EALvC,aAKQoC,EALRE,EAAAlL,MAAA,CAAAkL,EAAAvK,KAAA,cAAAuK,GAAA/K,OAAA,uBAAA+K,GAAAvK,KAAA,GAUsB2H,OAAOS,KAAKH,EAVlC,eAUQnB,GAVRyD,EAAAlL,KAAAkL,EAAAvK,KAAA,GAY+B/B,QAAQ8K,IACnCqB,EAAQjB,IAAI,SAAAvD,GAAA,MAAO+B,QAAOC,MAAMhC,KAbpC,eAYQ0E,GAZRC,EAAAlL,KAAAkL,EAAA/K,OAAA,SAgBSvB,QAAQ8K,IACbqB,EAAQjB,IAAI,SAACvD,EAAK9L,GAChB,WAA0BoC,KAAtBoO,EAAexQ,GACV4M,EAA2Bd,EAAKkB,GAGlCA,EAAMI,IAAItB,EAAK0E,EAAexQ,GAAGqN,YAtB9C,yBAAAoD,GAAAjH,SAAA6G,EAAA7O,QNg/BE,OAAO,YACL,MAAO4O,GAAMzF,MAAMnJ,KAAMoJ,eAIzB+F,EAAgB,WAClB,GAAIC,GAAQnG,EAAkByB,EAAgEY,EAAErE,KM39BlG,QAAAoI,KAAA,GAAAC,GAAA9D,CAAA,OAAAd,GAAAY,EAAAzK,KAAA,SAAA0O,GAAA,cAAAA,EAAA1H,KAAA0H,EAAA7K,MAAA,aACQ4K,IACJ,iCACA,kCAHJC,EAAA7K,KAAA,EAMsB2H,OAAOS,KAAKU,IANlC,cAMQhC,GANR+D,EAAAxL,KAAAwL,EAAArL,OAAA,SAOSvB,QAAQ8K,IACb6B,EAASzB,IAAI,SAAAvD,GAAA,MAAOc,GAA2Bd,EAAKkB,MARxD,wBAAA+D,GAAAvH,SAAAqH,EAAArP,QNm/BE,OAAO,YACL,MAAOoP,GAAMjG,MAAMnJ,KAAMoJ,eMhnCvBmE,EAAkB,0CAClBC,EAAmB,0CAuIzBlN,MAAKkP,iBAAiB,UAAW,SAACrP,GAChCgP,IAEAhP,EAAEsP,UAAUd,OAGdrO,KAAKkP,iBAAiB,WAAY,SAACrP,GACjCA,EAAEsP,UAAUxC,OAGd3M,KAAKkP,iBAAiB,QAAS,SAACrP,GAC9B,GAAMuP,GAAa,GAAIC,KAAIxP,EAAEyP,QAAQtF,IAErC,IAAIoF,EAAWG,SAAWvP,KAAKwP,SAASD,OAAQ,CAC9C,OAAQH,EAAWK,UACjB,IAAK,8BACL,IAAK,gCACH,MAAO5P,GAAE6P,YAAYhE,EAAW7L,EAAEyP,SAEpC,KAAK,mBACL,IAAK,sCACH,MAAOzP,GAAE6P,YAAYxD,EAAqBrM,EAAEyP,QAASrC,KAEvD,KAAK,gCACL,IAAK,wBACH,MAAOpN,GAAE6P,YAAYxF,EAAYrK,EAAEyP,UAKvC,GAAIF,EAAWK,SAASnC,SAAS,YAC/B,MAAOzN,GAAE6P,YAAYhE,EAAW7L,EAAEyP,SAGpC,IAAIF,EAAWK,SAASnC,SAAS,UAC/B,MAAOzN,GAAE6P,YAAYxD,EAAqBrM,EAAEyP,QAASpC,KAMvD,IAAIkC,EAAWK,SAASnC,SAAS,WAAY,CAC3C,GAAMqC,GAAcP,EAAWQ,OAAOC,QAAQ,QAAS,IACjDC,EAAkB,GAAIxG,SAAQqG,EAAa9P,EAAEyP,QAEnD,OAAOzP,GAAE6P,YAAYhE,EAAWoE,QAWtC9P,KAAKkP,iBAAiB,UAAW,SAACrP,GAChC,OAAQA,EAAEkQ,KAAKC,QACb,IAAK,UACChQ,KAAKiQ,SAAWjQ,KAAKiQ,QAAQA,SAC/BjQ,KAAKiQ,QAAQC,OAEf,MAEF,KAAK,cACClQ,KAAKmQ,aACPnQ,KAAKmQ","file":"sw.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(2);\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g =\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this;\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(3);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof global.process === \"object\" && global.process.domain) {\n      invoke = global.process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 4 */,\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);\n\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar saveNetworkResponseToCache = function () {\n  var _ref3 = _asyncToGenerator(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee(req, cache) {\n    var networkResponse;\n    return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return pureFetch(req);\n\n          case 2:\n            networkResponse = _context.sent;\n\n            if (networkResponse.ok) {\n              cache.put(req, networkResponse.clone());\n            }\n\n            return _context.abrupt('return', networkResponse);\n\n          case 5:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function saveNetworkResponseToCache(_x, _x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar cacheFirst = function () {\n  var _ref4 = _asyncToGenerator(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee2(req) {\n    var cacheResponse;\n    return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return caches.match(req);\n\n          case 2:\n            cacheResponse = _context2.sent;\n\n            if (!(cacheResponse === undefined)) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt('return', fetch(req));\n\n          case 5:\n            return _context2.abrupt('return', cacheResponse);\n\n          case 6:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function cacheFirst(_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar staleWhileRevalidate = function () {\n  var _ref5 = _asyncToGenerator(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee3(req, cacheName) {\n    var cache, cacheResponse, fetchPromise;\n    return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return caches.open(cacheName);\n\n          case 2:\n            cache = _context3.sent;\n            _context3.next = 5;\n            return cache.match(req);\n\n          case 5:\n            cacheResponse = _context3.sent;\n            fetchPromise = saveNetworkResponseToCache(req, cache);\n\n            if (!(cacheResponse === undefined)) {\n              _context3.next = 9;\n              break;\n            }\n\n            return _context3.abrupt('return', fetchPromise);\n\n          case 9:\n            return _context3.abrupt('return', cacheResponse);\n\n          case 10:\n          case 'end':\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n\n  return function staleWhileRevalidate(_x4, _x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nvar deleteOldCaches = function () {\n  var _ref6 = _asyncToGenerator(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee4() {\n    var cacheNames, whitelistCacheNames;\n    return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return caches.keys();\n\n          case 2:\n            cacheNames = _context4.sent;\n            whitelistCacheNames = [getAppCacheName(), getDataCacheName()];\n            return _context4.abrupt('return', Promise.all(cacheNames.filter(function (cacheName) {\n              return cacheName.startsWith('DOOEX');\n            }).filter(function (cacheName) {\n              return !whitelistCacheNames.includes(cacheName);\n            }).map(function (cacheName) {\n              return caches.delete(cacheName);\n            })));\n\n          case 5:\n          case 'end':\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this);\n  }));\n\n  return function deleteOldCaches() {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nvar fetchAppUrls = function () {\n  var _ref7 = _asyncToGenerator(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee5() {\n    var resp, assetManifest, dynamicAppUrls, staticAppUrls;\n    return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return pureFetch('__PUBLIC_PATH__/asset-manifest.json');\n\n          case 2:\n            resp = _context5.sent;\n            _context5.next = 5;\n            return resp.json();\n\n          case 5:\n            assetManifest = _context5.sent;\n            dynamicAppUrls = Object.keys(assetManifest).filter(function (k) {\n              return !k.endsWith('.map');\n            }).map(function (k) {\n              return assetManifest[k];\n            });\n            staticAppUrls = ['__PUBLIC_PATH__/', '__PUBLIC_PATH__/favicon.ico', '__PUBLIC_PATH__/manifest.json', '__PUBLIC_PATH__/static/css/bootstrap.min.css', '__PUBLIC_PATH__/static/fonts/glyphicons-halflings-regular.woff'];\n            return _context5.abrupt('return', staticAppUrls.concat(dynamicAppUrls));\n\n          case 9:\n          case 'end':\n            return _context5.stop();\n        }\n      }\n    }, _callee5, this);\n  }));\n\n  return function fetchAppUrls() {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nvar cacheAppUrls = function () {\n  var _ref8 = _asyncToGenerator(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee6() {\n    var appUrls, cacheName, cacheExists, cache, cacheResponses;\n    return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return fetchAppUrls();\n\n          case 2:\n            appUrls = _context6.sent;\n            cacheName = getAppCacheName();\n            _context6.next = 6;\n            return caches.has(cacheName);\n\n          case 6:\n            cacheExists = _context6.sent;\n\n            if (!cacheExists) {\n              _context6.next = 9;\n              break;\n            }\n\n            return _context6.abrupt('return');\n\n          case 9:\n            _context6.next = 11;\n            return caches.open(cacheName);\n\n          case 11:\n            cache = _context6.sent;\n            _context6.next = 14;\n            return Promise.all(appUrls.map(function (url) {\n              return caches.match(url);\n            }));\n\n          case 14:\n            cacheResponses = _context6.sent;\n            return _context6.abrupt('return', Promise.all(appUrls.map(function (url, i) {\n              if (cacheResponses[i] === undefined) {\n                return saveNetworkResponseToCache(url, cache);\n              }\n\n              return cache.put(url, cacheResponses[i].clone());\n            })));\n\n          case 16:\n          case 'end':\n            return _context6.stop();\n        }\n      }\n    }, _callee6, this);\n  }));\n\n  return function cacheAppUrls() {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nvar cacheDataUrls = function () {\n  var _ref9 = _asyncToGenerator(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee7() {\n    var dataUrls, cache;\n    return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            dataUrls = ['__PUBLIC_PATH__/data/data.json', '__PUBLIC_PATH__/data/meta.json'];\n            _context7.next = 3;\n            return caches.open(getDataCacheName());\n\n          case 3:\n            cache = _context7.sent;\n            return _context7.abrupt('return', Promise.all(dataUrls.map(function (url) {\n              return saveNetworkResponseToCache(url, cache);\n            })));\n\n          case 5:\n          case 'end':\n            return _context7.stop();\n        }\n      }\n    }, _callee7, this);\n  }));\n\n  return function cacheDataUrls() {\n    return _ref9.apply(this, arguments);\n  };\n}();\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\n/*\n  static always => cache:false, strategy:cache-first\n    /saved/[remote-google-url]\n\n  static always => cache:true, strategy:cache-first\n    ./static/css/css/bootstrap.min.css\n    ./static/fonts/fonts/glyphicons-halflings-regular.woff2\n\n  static versioned => cache:true, strategy:cache-first\n    ./favicon.ico\n    ./manifest.json\n    ./static/css/main.[chunkhash:8].css\n    ./static/js/main.[chunkhash:8].js\n\n  dynamic always => cache:false, strategy:network-only\n    ./sw-install.js\n    ./sw.js\n\n  dynamic versioned => cache:true, strategy:stale-while-revalidate\n    ./\n    ./asset-manifest.json\n    ./data/data-[slice-size].json\n    ./data/data.json\n    ./data/meta.json\n*/\n\nvar getVersion = function getVersion() {\n  return '__VERSION__';\n};\n\nvar getAppCacheName = function getAppCacheName() {\n  return 'DOOEX-app-' + getVersion();\n};\nvar getDataCacheName = function getDataCacheName() {\n  return 'DOOEX-data-' + getVersion();\n};\nvar getSavedCacheName = function getSavedCacheName() {\n  return 'DOOEX-saved';\n};\n\nfunction pureFetch(req) {\n  var headers = new Headers();\n  headers.append('cache-control', 'no-store');\n  headers.append('pragma', 'no-cache');\n\n  if (req.constructor === Request) {\n    Array.from(req.headers.entries()).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          val = _ref2[1];\n\n      return headers.append(key, val);\n    });\n\n    var reqClone = void 0;\n    if (req.mode === 'navigate') {\n      reqClone = new Request(req.url, { headers: headers });\n    } else {\n      reqClone = new Request(req, { headers: headers });\n    }\n\n    return fetch(reqClone);\n  }\n\n  return fetch(req, { headers: headers });\n}\n\nfunction networkOnly(req) {\n  return pureFetch(req);\n}\n\nself.addEventListener('install', function (e) {\n  cacheDataUrls();\n\n  e.waitUntil(cacheAppUrls());\n});\n\nself.addEventListener('activate', function (e) {\n  e.waitUntil(deleteOldCaches());\n});\n\nself.addEventListener('fetch', function (e) {\n  var requestUrl = new URL(e.request.url);\n\n  if (requestUrl.origin === self.location.origin) {\n    switch (requestUrl.pathname) {\n      case '__PUBLIC_PATH__/favicon.ico':\n      case '__PUBLIC_PATH__/manifest.json':\n        return e.respondWith(cacheFirst(e.request));\n\n      case '__PUBLIC_PATH__/':\n      case '__PUBLIC_PATH__/asset-manifest.json':\n        return e.respondWith(staleWhileRevalidate(e.request, getAppCacheName()));\n\n      case '__PUBLIC_PATH__/sw-install.js':\n      case '__PUBLIC_PATH__/sw.js':\n        return e.respondWith(networkOnly(e.request));\n\n      default:\n    }\n\n    if (requestUrl.pathname.includes('/static/')) {\n      return e.respondWith(cacheFirst(e.request));\n    }\n\n    if (requestUrl.pathname.includes('/data/')) {\n      return e.respondWith(staleWhileRevalidate(e.request, getDataCacheName()));\n    }\n\n    /*\n      TODO: cannot cache iframe resources - find another way out\n    */\n    if (requestUrl.pathname.includes('/saved/')) {\n      var resourceUrl = requestUrl.search.replace('?url=', '');\n      var resourceRequest = new Request(resourceUrl, e.request);\n\n      return e.respondWith(cacheFirst(resourceRequest));\n    }\n  }\n\n  /*\n    return cached assets, if any\n    return [new] network data\n  */\n  // e.respondWith(fetch(e.request));\n});\n\nself.addEventListener('message', function (e) {\n  switch (e.data.action) {\n    case 'control':\n      if (self.clients && self.clients.clients) {\n        self.clients.claim();\n      }\n      break;\n\n    case 'skipWaiting':\n      if (self.skipWaiting) {\n        self.skipWaiting();\n      }\n      break;\n\n    default:\n  }\n});\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// sw.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1fe87067036c981b0103","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 0\n// module chunks = 0 1","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/regenerator/index.js\n// module id = 1\n// module chunks = 0 1","// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g =\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this;\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/regenerator-runtime/runtime-module.js\n// module id = 2\n// module chunks = 0 1","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof global.process === \"object\" && global.process.domain) {\n      invoke = global.process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/regenerator-runtime/runtime.js\n// module id = 3\n// module chunks = 0 1","/*\n  static always => cache:false, strategy:cache-first\n    /saved/[remote-google-url]\n\n  static always => cache:true, strategy:cache-first\n    ./static/css/css/bootstrap.min.css\n    ./static/fonts/fonts/glyphicons-halflings-regular.woff2\n\n  static versioned => cache:true, strategy:cache-first\n    ./favicon.ico\n    ./manifest.json\n    ./static/css/main.[chunkhash:8].css\n    ./static/js/main.[chunkhash:8].js\n\n  dynamic always => cache:false, strategy:network-only\n    ./sw-install.js\n    ./sw.js\n\n  dynamic versioned => cache:true, strategy:stale-while-revalidate\n    ./\n    ./asset-manifest.json\n    ./data/data-[slice-size].json\n    ./data/data.json\n    ./data/meta.json\n*/\n\nconst getVersion = () => '__VERSION__';\n\nconst getAppCacheName = () => `DOOEX-app-${getVersion()}`;\nconst getDataCacheName = () => `DOOEX-data-${getVersion()}`;\nconst getSavedCacheName = () => 'DOOEX-saved';\n\nfunction pureFetch(req) {\n  const headers = new Headers();\n  headers.append('cache-control', 'no-store');\n  headers.append('pragma', 'no-cache');\n\n  if (req.constructor === Request) {\n    Array.from(req.headers.entries()).forEach(([key, val]) => headers.append(key, val));\n\n    let reqClone;\n    if (req.mode === 'navigate') {\n      reqClone = new Request(req.url, { headers });\n    } else {\n      reqClone = new Request(req, { headers });\n    }\n\n    return fetch(reqClone);\n  }\n\n  return fetch(req, { headers });\n}\n\nasync function saveNetworkResponseToCache(req, cache) {\n  const networkResponse = await pureFetch(req);\n  if (networkResponse.ok) {\n    cache.put(req, networkResponse.clone());\n  }\n\n  return networkResponse;\n}\n\nasync function cacheFirst(req) {\n  const cacheResponse = await caches.match(req);\n  if (cacheResponse === undefined) {\n    return fetch(req);\n  }\n\n  return cacheResponse;\n}\n\nfunction networkOnly(req) {\n  return pureFetch(req);\n}\n\nasync function staleWhileRevalidate(req, cacheName) {\n  const cache = await caches.open(cacheName);\n  const cacheResponse = await cache.match(req);\n\n  const fetchPromise = saveNetworkResponseToCache(req, cache);\n\n  if (cacheResponse === undefined) {\n    return fetchPromise;\n  }\n\n  return cacheResponse;\n}\n\nasync function deleteOldCaches() {\n  const cacheNames = await caches.keys();\n\n  const whitelistCacheNames = [\n    getAppCacheName(),\n    getDataCacheName(),\n  ];\n\n  return Promise.all(\n    cacheNames\n      .filter(cacheName => cacheName.startsWith('DOOEX'))\n      .filter(cacheName => !(whitelistCacheNames.includes(cacheName)))\n      .map(cacheName => caches.delete(cacheName))\n  );\n}\n\nasync function fetchAppUrls() {\n  const resp = await pureFetch('__PUBLIC_PATH__/asset-manifest.json');\n  const assetManifest = await resp.json();\n\n  const dynamicAppUrls = Object.keys(assetManifest)\n    .filter(k => !(k.endsWith('.map')))\n    .map(k => assetManifest[k]);\n\n  const staticAppUrls = [\n    '__PUBLIC_PATH__/',\n\n    '__PUBLIC_PATH__/favicon.ico',\n    '__PUBLIC_PATH__/manifest.json',\n\n    '__PUBLIC_PATH__/static/css/bootstrap.min.css',\n    '__PUBLIC_PATH__/static/fonts/glyphicons-halflings-regular.woff',\n  ];\n\n  return staticAppUrls.concat(dynamicAppUrls);\n}\n\nasync function cacheAppUrls() {\n  const appUrls = await fetchAppUrls();\n\n  const cacheName = getAppCacheName();\n\n  const cacheExists = await caches.has(cacheName);\n  if (cacheExists) {\n    return;\n  }\n\n  const cache = await caches.open(cacheName);\n\n  const cacheResponses = await Promise.all(\n    appUrls.map(url => caches.match(url))\n  );\n\n  return Promise.all(\n    appUrls.map((url, i) => {\n      if (cacheResponses[i] === undefined) {\n        return saveNetworkResponseToCache(url, cache);\n      }\n\n      return cache.put(url, cacheResponses[i].clone());\n    })\n  );\n}\n\nasync function cacheDataUrls() {\n  const dataUrls = [\n    '__PUBLIC_PATH__/data/data.json',\n    '__PUBLIC_PATH__/data/meta.json',\n  ];\n\n  const cache = await caches.open(getDataCacheName());\n  return Promise.all(\n    dataUrls.map(url => saveNetworkResponseToCache(url, cache))\n  );\n}\n\nself.addEventListener('install', (e) => {\n  cacheDataUrls();\n\n  e.waitUntil(cacheAppUrls());\n});\n\nself.addEventListener('activate', (e) => {\n  e.waitUntil(deleteOldCaches());\n});\n\nself.addEventListener('fetch', (e) => {\n  const requestUrl = new URL(e.request.url);\n\n  if (requestUrl.origin === self.location.origin) {\n    switch (requestUrl.pathname) {\n      case '__PUBLIC_PATH__/favicon.ico':\n      case '__PUBLIC_PATH__/manifest.json':\n        return e.respondWith(cacheFirst(e.request));\n\n      case '__PUBLIC_PATH__/':\n      case '__PUBLIC_PATH__/asset-manifest.json':\n        return e.respondWith(staleWhileRevalidate(e.request, getAppCacheName()));\n\n      case '__PUBLIC_PATH__/sw-install.js':\n      case '__PUBLIC_PATH__/sw.js':\n        return e.respondWith(networkOnly(e.request));\n\n      default:\n    }\n\n    if (requestUrl.pathname.includes('/static/')) {\n      return e.respondWith(cacheFirst(e.request));\n    }\n\n    if (requestUrl.pathname.includes('/data/')) {\n      return e.respondWith(staleWhileRevalidate(e.request, getDataCacheName()));\n    }\n\n    /*\n      TODO: cannot cache iframe resources - find another way out\n    */\n    if (requestUrl.pathname.includes('/saved/')) {\n      const resourceUrl = requestUrl.search.replace('?url=', '');\n      const resourceRequest = new Request(resourceUrl, e.request);\n\n      return e.respondWith(cacheFirst(resourceRequest));\n    }\n  }\n\n  /*\n    return cached assets, if any\n    return [new] network data\n  */\n  // e.respondWith(fetch(e.request));\n});\n\nself.addEventListener('message', (e) => {\n  switch (e.data.action) {\n    case 'control':\n      if (self.clients && self.clients.clients) {\n        self.clients.claim();\n      }\n      break;\n\n    case 'skipWaiting':\n      if (self.skipWaiting) {\n        self.skipWaiting();\n      }\n      break;\n\n    default:\n  }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/sw.js"],"sourceRoot":""}